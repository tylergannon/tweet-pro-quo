---

import { get_quotes, type Quote } from "$lib/db";

const authors_set: Set<string> = new Set();
for (const quote of get_quotes()) {
	authors_set.add(quote.author);
}
const quotes = get_quotes();
const initial: Quote[] = []
for (let i = 0; i < 10; i++) {
  initial.push(quotes.shift()!)
}
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
---
<script>

  async function handleScroll(){
    if (ids.length == 0) {
      document.removeEventListener('scroll', handleScroll);
      const node = document.createElement("li")
      node.innerText = "You've reached the bottom!";
      el.append(node);
      return;
    }
    const scrollY = window.scrollY;
    const windowHeight = window.innerHeight;
    const bodyHeight = document.body.offsetHeight;
    const id = ids.pop();

    if (scrollY + windowHeight >= bodyHeight){
      const li = document.createElement("li");
      const a = document.createElement("a");
      a.href = `/${id}`;
      li.append(a);
      const img = document.createElement("img");
      img.src=`/${id}.webp`;
      img.alt = "Go to quote";
      a.append(img);
      el.append(li);
    }
  }
  var ids: number[] = [];
  
  var el: HTMLUListElement;
  document.addEventListener('DOMContentLoaded', () => {
    document.addEventListener('scroll', handleScroll);
    el = document.querySelector("main > ul#quotes") as HTMLUListElement;
    const cnt = parseInt(el.dataset["len"]!)
    for (let i = 0; i < cnt; i++) {
      ids.push(i);
    }
    shuffleArray(ids)
  });
  function shuffleArray(array: number[]) {
    for (let i = array.length - 1; i > 0; i--) {
        // Generate a random index between 0 and i (inclusive)
        const j = Math.floor(Math.random() * (i + 1));
        
        // Swap elements at indices i and j
        [array[i], array[j]] = [array[j], array[i]];
    }
    return array;
}

</script>

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body>
		<Header />
		<main>
			<h1>{SITE_TITLE}</h1>
			<p>
        A simple tool for making quote tweets.
      </p>
    <ul data-len={quotes.length} id="quotes">
      {initial.map(q => (
        <li>
          <a href=`/${q.id}`>
            <img src=`/${q.id}.webp` loading="eager" alt={q.quote} />
          </a>
        </li>
      ))}
    </ul>

		</main>
		<Footer />
	</body>
</html>
<style>
  ul#quotes {
    list-style: none;
  }
</style>